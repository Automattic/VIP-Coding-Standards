sudo: false

dist: trusty

cache:
  directories:
    - $HOME/.cache/composer/files

language:
  - php

before_install:
  # Speed up build time by disabling Xdebug.
  # https://johnblackbourn.com/reducing-travis-ci-build-times-for-wordpress-projects/
  # https://twitter.com/kelunik/status/954242454676475904
  - phpenv config-rm xdebug.ini || echo 'No xdebug config.'

  # Handle new PHP version with old PHPCS version. Version of PHPUnit 6 is the current latest release.
  - |
    if [[ ${TRAVIS_PHP_VERSION:0:2} == "7." && "$PHPCS_BRANCH" == "3.2.3" ]]; then
      export USE_OLD_PHPUNIT="1"
      export PHPUNIT_DIR=/tmp/phpunit
      export PHPUNIT6="6.5.12"
    fi

install:
  - composer require squizlabs/php_codesniffer:"$PHPCS_BRANCH" --update-no-dev --no-suggest --no-scripts
  - composer install --dev --no-suggest
  # Download PHPUnit 6.x for builds on PHP 7.2 with PHPCS 3.2.3, as PHPCS 3.2.3 is not compatible with PHPUnit 7.x.
  - if [[ "$USE_OLD_PHPUNIT" == "1" ]]; then wget -P "$PHPUNIT_DIR" "https://phar.phpunit.de/phpunit-$PHPUNIT6.phar" && chmod +x "$PHPUNIT_DIR/phpunit-$PHPUNIT6.phar"; fi

script:
  # Run the unit tests.
  - |
    if [[ "$USE_OLD_PHPUNIT" == "1" ]]; then
      php "$PHPUNIT_DIR/phpunit-$PHPUNIT6.phar" --filter WordPressVIPMinimum "$(pwd)/vendor/squizlabs/php_codesniffer/tests/AllTests.php"
    else
      ./bin/unit-tests
    fi

  # Run integration test.
  - if [[ "$INTEGRATION_TEST" == "1" ]]; then ./bin/integration-test; fi

# Rather than a `matrix` property, we use build stages. This allows early
# build failure for basic linting and sniffing issues.
# @link https://docs.travis-ci.com/user/build-stages/
#
# PHP >= 7.3 & PHPCS < 3.3.1 is known to fail.
# @link https://github.com/squizlabs/PHP_CodeSniffer/issues/2086.
#
# We can't use Matrix Expansion here, since we need to exclude jobs for the known failures,
# which Matrix Expansion does not yet support. We list each combination instead.
# @link https://docs.travis-ci.com/user/conditional-builds-stages-jobs/#conditional-jobs

stages:
  - lint
  - sniff
  - test

jobs:
  allow_failure:
    - php: nightly
  fast_finish: true
  include:

    - stage: lint
      php: 7.2
      env: PHPCS_BRANCH="dev-master"
      before_install: phpenv config-rm xdebug.ini || echo 'No xdebug config.'
      install: false
      cache: false
      script:
        # Lint the PHP files against parse errors.
        - ./bin/php-lint

        # Validate the XML files and check the code-style consistency of the XML files.
        - ./bin/xml-lint

        # Validate the composer.json file.
        # @link https://getcomposer.org/doc/03-cli.md#validate
        - composer validate --no-check-all --strict
      addons:
        apt:
          packages:
            - libxml2-utils

    - stage: sniff
      php: 7.2
      env: PHPCS_BRANCH="dev-master"
      before_install: phpenv config-rm xdebug.ini || echo 'No xdebug config.'
      install: composer install --dev --no-suggest
      script:
        # Run PHPCS against VIPCS.
        - ./bin/phpcs

    # PHPCS_BRANCH="3.2.3" is the lowest supported release in the 3.x series with which VIPCS is compatible
    # (and which can run the unit tests).
    - stage: test
      php: 5.6
      env: PHPCS_BRANCH="dev-master"

    - stage:
      php: 5.6
      env: PHPCS_BRANCH="3.2.3"

    - stage:
      php: 7.0
      env: PHPCS_BRANCH="dev-master"

    - stage:
      php: 7.0
      env: PHPCS_BRANCH="3.2.3"

    - stage:
      php: 7.1
      env: PHPCS_BRANCH="dev-master"

    - stage:
      php: 7.1
      env: PHPCS_BRANCH="3.2.3"

    - stage:
      php: 7.2
      env: PHPCS_BRANCH="dev-master"

    - stage:
      php: 7.2
      env: PHPCS_BRANCH="3.2.3"

    # Only use PHPCS_BRANCH="dev-master" from this point.
    - stage:
      php: nightly
      env: PHPCS_BRANCH="dev-master"
