language: php
os: linux
dist: xenial

env:
  # `master` is now 3.x.
  - PHPCS_BRANCH="dev-master"
  # Lowest supported release in the 3.x series with which VIPCS is compatible.
  - PHPCS_BRANCH="3.5.5"

cache:
  directories:
    - $HOME/.cache/composer/files

php:
  - 5.6
  - 7.0
  - 7.1
  - 7.2
  - 7.3
  - 7.4
  - "nightly"

jobs:
  allow_failures:
    - php: "nightly"
  include:
    # Builds which need a different distro or specific PHPCS version.
    - php: 8.0
      env: PHPCS_BRANCH="dev-master"
    - php: 8.0
      # PHPCS 3.5.7 is the lowest version of PHPCS which supports PHP 8.0.
      env: PHPCS_BRANCH="3.5.7"
    - php: 5.5
      dist: trusty
      env: PHPCS_BRANCH="dev-master"
    - php: 5.5
      dist: trusty
      env: PHPCS_BRANCH="3.5.5"
    - php: 5.4
      dist: trusty
      env: PHPCS_BRANCH="dev-master"
    - php: 5.4
      dist: trusty
      env: PHPCS_BRANCH="3.5.5"

before_install:
  # Speed up build time by disabling Xdebug.
  # https://johnblackbourn.com/reducing-travis-ci-build-times-for-wordpress-projects/
  # https://twitter.com/kelunik/status/954242454676475904
  - phpenv config-rm xdebug.ini || echo 'No xdebug config.'

  # On stable PHPCS versions, allow for PHP deprecation notices.
  # Unit tests don't need to fail on those for stable releases where those issues won't get fixed anymore.
  - |
    if [[ $PHPCS_BRANCH != "dev-master" ]]; then
      echo 'error_reporting = E_ALL & ~E_DEPRECATED' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
    fi

install:
  - travis_retry composer require squizlabs/php_codesniffer:"$PHPCS_BRANCH" --no-update --no-suggest --no-scripts
  - |
    if [[ $TRAVIS_PHP_VERSION == "nightly" || $TRAVIS_PHP_VERSION == "8.0" ]]; then
      # PHPUnit 7.x does not allow for installation on PHP 8, so ignore platform
      # requirements to get PHPUnit 7.x to install on nightly.
      travis_retry composer install --ignore-platform-reqs --no-suggest
    else
      travis_retry composer install --no-suggest
    fi

script:
  # Run the unit tests.
  - ./bin/unit-tests

  # Run ruleset tests.
  - ./bin/ruleset-tests
