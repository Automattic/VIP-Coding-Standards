dist: xenial

cache:
  directories:
    - $HOME/.cache/composer/files

language:
  - php

before_install:
  # Speed up build time by disabling Xdebug.
  # https://johnblackbourn.com/reducing-travis-ci-build-times-for-wordpress-projects/
  # https://twitter.com/kelunik/status/954242454676475904
  - phpenv config-rm xdebug.ini || echo 'No xdebug config.'

install:
  - composer require squizlabs/php_codesniffer:"$PHPCS_BRANCH" --update-no-dev --no-suggest --no-scripts
  - composer install --dev --no-suggest

script:
  # Run the unit tests.
  - ./bin/unit-tests

  # Run ruleset tests.
  - ./bin/ruleset-tests

env:
  # `master` is now 3.x.
  - PHPCS_BRANCH="dev-master"
  # Lowest supported release in the 3.x series with which VIPCS is compatible.
  - PHPCS_BRANCH="3.3.1"

php:
  - 5.6
  - 7.0
  - 7.1
  - 7.2
  - 7.3
  - "7.4snapshot"

# Rather than a `matrix` property, we use build stages. This allows early
# build failure for basic linting and sniffing issues.
# @link https://docs.travis-ci.com/user/build-stages/

stages:
  - lint
  - sniff
  - test

jobs:
  allow_failures:
    - php: "7.4snapshot"
  include:

    - stage: lint
      php: 7.3
      env: PHPCS_BRANCH="dev-master"
      before_install: phpenv config-rm xdebug.ini || echo 'No xdebug config.'
      install: false
      cache: false
      script:
        # Lint the PHP files against parse errors.
        - ./bin/php-lint

        # Add PHPCS locally for the XSD.
        - composer require squizlabs/php_codesniffer
        # Validate the XML files and check the code-style consistency of the XML files.
        - ./bin/xml-lint

        # Validate the composer.json file.
        # @link https://getcomposer.org/doc/03-cli.md#validate
        - composer validate --no-check-all --strict
      addons:
        apt:
          packages:
            - libxml2-utils

    - stage: sniff
      php: 7.3
      env: PHPCS_BRANCH="dev-master"
      before_install: phpenv config-rm xdebug.ini || echo 'No xdebug config.'
      install: composer install --dev --no-suggest
      script:
        # Run PHPCS against VIPCS.
        - ./bin/phpcs


